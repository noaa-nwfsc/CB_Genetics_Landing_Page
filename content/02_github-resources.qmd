---
title: Github Resources
---

## CB Genetics Working Best Practices

Best practices for working on analyses in github: 

-   **All repositories with NOAA work should be housed in Github Enterprise under the NWFSC organization, NOT in your personal/NOAA github account.**

-   **Work and commit in the main branch of a repo** (see special cases for branching and forking below)

-   **Commits**

    -   Perform commits daily at minimum when working on analysis

    -   Make sure to push to origin (if working from github desktop) daily as well!

    -   If working in a branch, commit daily to the branch, and determine how often to merge to main

-   **Forking**

    -   Generally do not use!

    -   Forking may be useful if contributors to the repository are outside of enterprise, but you must create and uphold good team standards on how often forks are merged back into the main repository.

-   **Branching**

    -   Use sparingly!

    -   Create a branch for a specific task, complete task, merge to main immediately. 

        -   Use when you are making a change that could “break” the main repo for some reason

        -   Branches are easy to “get lost in” and can create confusion and complicate organization of your repo

-   **Projects** can be created within our CB-genetics team. Use them to organize tasks or discussions associated with one or multiple repositories.

## CB Genetics Github Repository Guidelines

See the How to: Create a github repository in enterprise tab for a full tutorial walk through of creating a github repository.

From the [NMFS Github Guide](https://nmfs-opensci.github.io/GitHub-Guide/#sec-guidelines), your repository should include a README, the government product DISCLAIMER, and LICENSE file. If the work is something that can be cited, then also include citation information and a DOI. In addition, all CB Genetics github repositories should include the following components:

#### README

This file should provide a description of the repository. The contents of the README file will vary greatly depending on the application, but there are a few common elements for NOAA Fisheries work products: title, description, developer information, disclaimer, NOAA Fisheries logo, and DOC footer.

README guidelines:

xxx

#### DISCLAIMER.md

Repositories and web content shared on GitHub should make it clear to the audience that no information should be considered or interpreted as official communication of NOAA. The simplest method for doing this is to include the disclaimer text as a footnote within the repository’s README.md and any web content available from that repository. Be careful not to use NOAA logos and and NOAA Fisheries branding in a way that could imply official communication. NOAA logos should be used to indicate your affiliation and acknowledge support and funding.

The following DISCLAIMER.md file is put in the root of the repository.

::: {.callout-note icon="false"}
## DISCLAIMER.md

This repository is a scientific product and is not official communication of the National Oceanic and Atmospheric Administration, or the United States Department of Commerce. All NOAA GitHub project code is provided on an ‘as is’ basis and the user assumes responsibility for its use. Any claims against the Department of Commerce or Department of Commerce bureaus stemming from the use of this GitHub project will be governed by all applicable Federal law. Any reference to specific commercial products, processes, or services by service mark, trademark, manufacturer, or otherwise, does not constitute or imply their endorsement, recommendation or favoring by the Department of Commerce. The Department of Commerce seal and logo, or the seal and logo of a DOC bureau, shall not be used in any manner to imply endorsement of any commercial product or activity by DOC or the United States Government.
:::

#### LICENSE Files

You should add an open license file to the GitHub repository before work begins. This establishes from the moment work starts that all work is open source (as required for publicly released federally funded work).

To add a license to your repository, navigate to the base level of your repository (so not in a subdirectory) and add a file called LICENSE. Under the file name, click Choose a license template, select CC0 1.0 Universal.

Apache 2.0?

You can also add license information to the bottom of your README.

::: {.callout-note icon="false"}
## License

This content was created by U.S. Government employees as part of their official duties. This content is not subject to copyright in the United States (17 U.S.C. §105) and is in the public domain within the United States of America. Additionally, copyright is waived worldwide through the CC0 1.0 Universal public domain dedication.
:::

#### Assign CB-Genetics Team

Assigning the CB-Genetics team to your repository keeps our group's work organized and easy to find within the NWFSC enterprise organization. Simply navigate to the NWFSC enterprise organization, click on the Teams tab, expand the CB team to find the CB-Genetics team within it, then click on Repositories.

![Repositories in the CB-Genetics Team](CB-Genetics Team Repositories.png){alt="Repositories in the CB-Genetics Team" fig-align="center"}

*To do this: Settings -\>Manage access -\> Add teams -\> CB-Genetics (You choose permissions when establishing this access.)*

#### Assign the nwfsc-cb-genetics Topic to Your Repository

xxxx

#### Gitignore

xxxx

## NOAA Github Repository Guidelines

From the [NMFS Github Guide](https://nmfs-opensci.github.io/GitHub-Guide/#sec-guidelines), all repositories, regardless of purpose, must follow these general guidelines:

-   PII and BII should never be shared (on purpose or inadvertently) on GitHub regardless of whether the repository is in a private or public repository.
-   No sensitive information should be shared in repositories, including (but is not limited to) usernames, passwords, login information, port numbers, IP addresses, server names, Application Programming Interface (API) keys, Personally Identifiable Information (PII), Business Identifiable Information (BII), or confidential data.
-   GitHub is not a back-up service nor is it a data repository with archiving. Other tools are designed for this purpose.
-   Only scientific content that can be reasonably classified as FISMA Low should be shared on GitHub.
-   Repositories that have code that interacts with APIs using IP addresses, usernames, passwords, secrets, or credentials must take steps to prevent committing of “secrets” to GitHub.
