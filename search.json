[
  {
    "objectID": "content/02a_create-github-repo.html",
    "href": "content/02a_create-github-repo.html",
    "title": "How to: Create a github repository in enterprise",
    "section": "",
    "text": "Step by step tutorial coming!\nLittle section at end:\nCreate a new repository based on someone else’s:\n\nGo to github file and download and work with it\nImporting when you want the whole repo, but want to make it your own\n\nNo connections to parent repo\nLittle button somewhere that may be hard to find in github\nHow to: import a repository \nCaveats- this pulls over EVERYTHING\nIt may be more useful/easier to just download the file with the code you want to replicate and create a new repository on your own",
    "crumbs": [
      "Github Resources",
      "How to: Create a github repository in enterprise"
    ]
  },
  {
    "objectID": "content/acknowledgements.html",
    "href": "content/acknowledgements.html",
    "title": "Acknowledgments",
    "section": "",
    "text": "This repo and GitHub Action was based on the tutorial by Openscapes quarto-website-tutorial by Julia Lowndes and Stefanie Butland.",
    "crumbs": [
      "Acknowledgements"
    ]
  },
  {
    "objectID": "content/05_sedna-resources.html",
    "href": "content/05_sedna-resources.html",
    "title": "Sedna Resources",
    "section": "",
    "text": "Sedna Information and Best Practices\n\nGithub Push/Pull from Sedna\n\nIn order to push changes from sedna to github repositories, you need to set up an ssh key. Log into sedna and follow these instructions from your home directory:\n\nInstructions on github\nRun this: \n\n\nssh-keygen -t ed25519 -C \"your_email@example.com\"\n\nPress enter to save key to default location\nEnter a secure passphrase (prompted twice)\n\nNote: you do not need to use ssh-agent, but you can set up ssh-agent if you would like to avoid re-entering passphrase for every push. Ignore the portion on hardware security keys\n\nNext add your SSH key to your github account by copying the key you generated on sedna to your github account\n\nInstructions on git\nRun the following in sedna:\n\n\ncat ~/.ssh/id_ed25519.pub\n\nAdd key and copy output from above into key field: https://github.com/settings/keys\n\nNow when you run git push, you will be prompted to enter your pass phrase for your ssh key. If you added your key to the ssh-agent, you will not be prompted for a pass phrase. These steps allow you to push and pull to repositories in your personal github (name-NOAA).\nTo push to a repository in the enterprise, you will need to set up SSO: \n\nInstructions on git: Authorize ssh key for SSO\nGo to page with your key: https://github.com/settings/keys\nClick configure SSO\nClick an organization to authorize",
    "crumbs": [
      "Sedna Resources"
    ]
  },
  {
    "objectID": "content/04_data-management.html",
    "href": "content/04_data-management.html",
    "title": "Data Management",
    "section": "",
    "text": "Content forthcoming!",
    "crumbs": [
      "Data Management"
    ]
  },
  {
    "objectID": "content/02c_use-github-desktop.html",
    "href": "content/02c_use-github-desktop.html",
    "title": "How to: Use Github Desktop",
    "section": "",
    "text": "Github desktop is one of the easiest ways to work with your analysis in Github in real time. This page will give you a quick guided tutorial on working with github desktop.\nMake sure you are signed in to Github Desktop before starting.\nKey terms used on this page can be found at the bottom.",
    "crumbs": [
      "Github Resources",
      "How to: Use Github Desktop"
    ]
  },
  {
    "objectID": "content/02c_use-github-desktop.html#clone-repositories-to-github-desktop",
    "href": "content/02c_use-github-desktop.html#clone-repositories-to-github-desktop",
    "title": "How to: Use Github Desktop",
    "section": "Clone Repositories to Github Desktop",
    "text": "Clone Repositories to Github Desktop\nTo work on a repository on your local machine, you need to clone it to Github desktop.\n\nIn the File menu, click Clone Repository\n\n\n\n\n\n\n\nOn the open window, use either the Github.com tab or the URL tab to find the repository you want to clone.\n\nOn the Github.com tab, start typing the repository name or search the dropdown menu for repositories in your personal account or the nwfsc enterprise organization.\nOn the URL tab, paste the URL of the github browser repository you want to clone.\nDo not use the GitHub Enterprise tab\n\n\n\n\n\n\n\n\nSelect the local directory into which you want to clone the repository. Next to “Local Path”, click Choose and navigate to the directory/folder where you want the github repository to live on your local machine.\n\nThis process will create a new folder in the directory you choose and call it your repository name. Location of the repository is up to you.!\n\nThe default directory will be in your Documents/Github folder on your computer and it will create a new folder called the name of the repository\nYou may choose to locate your repository folder somewhere in the project folder for which you are working\n\nYou may drag and drop the repository folder to another location after you initially clone it, but do not just move the files within the repo folder (there are hidden files that must go with it). Upon next working session, Github desktop will ask you to identify where you have moved the folder.\n\n\n\n\n\n\n\n\nAt the bottom of the “Clone Repository” window, click Clone.\n\nRepositories you have cloned to your local computer are shown in the drop down menu at the top left of your github desktop window. Toggle between them to work in different repositories.\n\n\n\n\n\nIf you are starting from scratch and making a new repository, follow the instructions How to: Create a github repository in enterprise, you will already have a cloned version on your desktop.",
    "crumbs": [
      "Github Resources",
      "How to: Use Github Desktop"
    ]
  },
  {
    "objectID": "content/02c_use-github-desktop.html#working-on-analyses-with-github",
    "href": "content/02c_use-github-desktop.html#working-on-analyses-with-github",
    "title": "How to: Use Github Desktop",
    "section": "Working on Analyses with Github",
    "text": "Working on Analyses with Github\nOpen github desktop on your local computer.\nToggle to the repo you want to work on\nCheck to see if you need to fetch origin (changes you or someone else made to the repository that aren’t reflected on your local machine)- you want to work with the most up to date version of the repo always to avoid conflicts!\nClick “Show files in Explorer” (maybe slightly different for mac) or navigate to the folder on your local machine linked to the github repo\nOpen code in R studio or whatever program etc (all markdown files can be edited in R)\nWork!\nSave your file\nGo back to github desktop- it will show there is a change to commit\nType a commit message (stating what work you did) and hit commit to main\nFrequency of commits are up to you, at least once a day\nAfter you make a commit, there will be a xxxxxx and it will say push to origin\nAlways push to origin (pushes the changes you made to github so they are not just stored on your local machine, ie this backs things up for you!) at least at the end of your work session, once per day at minimum",
    "crumbs": [
      "Github Resources",
      "How to: Use Github Desktop"
    ]
  },
  {
    "objectID": "content/02c_use-github-desktop.html#key-terms",
    "href": "content/02c_use-github-desktop.html#key-terms",
    "title": "How to: Use Github Desktop",
    "section": "Key Terms",
    "text": "Key Terms\nclone- a copy of a repository that lives on your computer instead of a website’s server (cloning is the act of making that copy). When you make a clone, you can edit the files in your preferred editor and use Git to keep track of your changes without having to be online. THe repo you cloned is still connected to teh remote version so that you can push your local changes to the remove to keep them synced when youre online.\ncommit- an individual change to a file, when you make a commit to save your work, Git creates a unique ID that allows you to keep record of the specifci changes committed along with who make them and when.\npull- fetching changes- pull those changes to your local copy so it is up to date\npush- send your committed changes to a remote repository on github.com\nRemote repo- the repo on github.com\nlocal- your laptop/computer\ngithub desktop- program installed on your computer",
    "crumbs": [
      "Github Resources",
      "How to: Use Github Desktop"
    ]
  },
  {
    "objectID": "00_homepage.html",
    "href": "00_homepage.html",
    "title": "CB Genetics Landing Page",
    "section": "",
    "text": "This page is built and maintained by the Conservation Biology Genetics and Evolution Program at the NOAA NWFSC.\nOn this page you will find links to github repositories for current and past projects of our group. In addition, we have links to Github resources, open science resources, Sedna resources, etc.\nIf you have ideas on pages or resources to add, contact xxx.\n\nNWFSC Molecular Genetics Lab Page\nFor links to the genetics lab databases, protocols, equipment signups, etc. visit the NWFSC Molecular Genetics Lab Page.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "content/rmarkdown.html",
    "href": "content/rmarkdown.html",
    "title": "R Markdown",
    "section": "",
    "text": "You can include R Markdown files in your project."
  },
  {
    "objectID": "content/rmarkdown.html#r-markdown",
    "href": "content/rmarkdown.html#r-markdown",
    "title": "R Markdown",
    "section": "R Markdown",
    "text": "R Markdown\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\nsummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00"
  },
  {
    "objectID": "content/rmarkdown.html#including-plots",
    "href": "content/rmarkdown.html#including-plots",
    "title": "R Markdown",
    "section": "Including Plots",
    "text": "Including Plots\nYou can also embed plots, for example:\n\n\n\n\n\n\n\n\n\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot."
  },
  {
    "objectID": "content/02d_general-resources-glossary.html",
    "href": "content/02d_general-resources-glossary.html",
    "title": "General Github Resources and Glossary",
    "section": "",
    "text": "Not sure why we use github? Check out this illustrated blog post explaining how github is used for supporting, reusing, contributing, and failing.",
    "crumbs": [
      "Github Resources",
      "General Github Resources and Glossary"
    ]
  },
  {
    "objectID": "content/02d_general-resources-glossary.html#why-github",
    "href": "content/02d_general-resources-glossary.html#why-github",
    "title": "General Github Resources and Glossary",
    "section": "",
    "text": "Not sure why we use github? Check out this illustrated blog post explaining how github is used for supporting, reusing, contributing, and failing.",
    "crumbs": [
      "Github Resources",
      "General Github Resources and Glossary"
    ]
  },
  {
    "objectID": "content/02d_general-resources-glossary.html#github-trainings-and-videos",
    "href": "content/02d_general-resources-glossary.html#github-trainings-and-videos",
    "title": "General Github Resources and Glossary",
    "section": "Github Trainings and Videos",
    "text": "Github Trainings and Videos\nThe NOAA Fisheries GitHub Governance Team has an excellent suite of videos on git skills. Check out those videos here.\nGithub skills for self-guided learning found here.\nGuidance and best practices for NMFS github users provided by NMFS Open Science can be found here.\nThe NOAA Omics Technical Portal has a suite of resources specific to ’Omics data, including example analyses!\nThe NOAA Omics Discussion Forum may also be a good place to ask and answer questions regarding ’Omics analyses.",
    "crumbs": [
      "Github Resources",
      "General Github Resources and Glossary"
    ]
  },
  {
    "objectID": "content/02d_general-resources-glossary.html#markdown-basics",
    "href": "content/02d_general-resources-glossary.html#markdown-basics",
    "title": "General Github Resources and Glossary",
    "section": "Markdown Basics",
    "text": "Markdown Basics\nREADME files are all markdown files. If you are new to using markdown, check out this cheat sheet.\nYou can also open and edit markdown documents in R Studio. There is an option in the top corner to change the view form “Source” to “Visual” to view and edit the markdown code as it will be published.\n\n\n\nMarkdown file in R Studio with “Source” view.\n\n\n\n\n\nMarkdown file in R Studio with “Visual” view.",
    "crumbs": [
      "Github Resources",
      "General Github Resources and Glossary"
    ]
  },
  {
    "objectID": "content/02d_general-resources-glossary.html#github-basics-glossary",
    "href": "content/02d_general-resources-glossary.html#github-basics-glossary",
    "title": "General Github Resources and Glossary",
    "section": "Github Basics Glossary",
    "text": "Github Basics Glossary\nA full list of terms can be found here, but below are some common terms to get acquainted with.\n\n\n\n\n\n\n\nTerm\nDefinition\n\n\n\n\nbranch\nA branch is a parallel version of a repository. It is contained within the repository, but does not affect the primary or main branch allowing you to work freely without disrupting the “live” version. When you’ve made the changes you want to make, you can merge your branch back into the main branch to publish your changes.\n\n\nclone\nA clone is a copy of a repository that lives on your computer instead of on a website’s server somewhere, or the act of making that copy. When you make a clone, you can edit the files in your preferred editor and use Git to keep track of your changes without having to be online. The repository you cloned is still connected to the remote version so that you can push your local changes to the remote to keep them synced when you’re online.\n\n\ncommit\nA commit, or “revision”, is an individual change to a file (or set of files). When you make a commit to save your work, Git creates a unique ID (a.k.a. the “SHA” or “hash”) that allows you to keep record of the specific changes committed along with who made them and when. Commits usually contain a commit message which is a brief description of what changes were made.\n\n\ndirectory\nA folder containing one or more files or folders. You can create directories to organize the contents of a repository.\n\n\nfork\nA fork is a personal copy of another user’s repository that lives on your account. Forks allow you to freely make changes to a project without affecting the original upstream repository. You can also open a pull request in the upstream repository and keep your fork synced with the latest changes since both repositories are still connected.\n\n\npull\nPull refers to when you are fetching in changes and merging them. For instance, if someone has edited the remote file you’re both working on, you’ll want to pull in those changes to your local copy so that it’s up to date.\n\n\npull request\nPull requests are proposed changes to a repository submitted by a user and accepted or rejected by a repository’s collaborators. Like issues, pull requests each have their own discussion forum.\n\n\npush\nTo push means to send your committed changes to a remote repository on GitHub.com. For instance, if you change something locally, you can push those changes so that others may access them.\n\n\nrepository\nA repository is the most basic element of GitHub. They’re easiest to imagine as a project’s folder. A repository contains all of the project files (including documentation), and stores each file’s revision history. Repositories can have multiple collaborators and can be either public or private.",
    "crumbs": [
      "Github Resources",
      "General Github Resources and Glossary"
    ]
  },
  {
    "objectID": "content/02_github-resources.html",
    "href": "content/02_github-resources.html",
    "title": "Github Resources",
    "section": "",
    "text": "Best practices for working on analyses in github: \n\nAll repositories with NOAA work should be housed in Github Enterprise under the NWFSC organization, NOT in your personal/NOAA github account.\nWork and commit in the main branch of a repo (see special cases for branching and forking below)\nCommits\n\nPerform commits daily at minimum when working on analysis\nMake sure to push to origin (if working from github desktop) daily as well!\nIf working in a branch, commit daily to the branch, and determine how often to merge to main\n\nForking\n\nGenerally do not use!\nForking may be useful if contributors to the repository are outside of enterprise, but you must create and uphold good team standards on how often forks are merged back into the main repository.\n\nBranching\n\nUse sparingly!\nCreate a branch for a specific task, complete task, merge to main immediately. \n\nUse when you are making a change that could “break” the main repo for some reason\nBranches are easy to “get lost in” and can create confusion and complicate organization of your repo\n\n\nProjects can be created within our CB-genetics team. Use them to organize tasks or discussions associated with one or multiple repositories.",
    "crumbs": [
      "Github Resources"
    ]
  },
  {
    "objectID": "content/02_github-resources.html#cb-genetics-working-best-practices",
    "href": "content/02_github-resources.html#cb-genetics-working-best-practices",
    "title": "Github Resources",
    "section": "",
    "text": "Best practices for working on analyses in github: \n\nAll repositories with NOAA work should be housed in Github Enterprise under the NWFSC organization, NOT in your personal/NOAA github account.\nWork and commit in the main branch of a repo (see special cases for branching and forking below)\nCommits\n\nPerform commits daily at minimum when working on analysis\nMake sure to push to origin (if working from github desktop) daily as well!\nIf working in a branch, commit daily to the branch, and determine how often to merge to main\n\nForking\n\nGenerally do not use!\nForking may be useful if contributors to the repository are outside of enterprise, but you must create and uphold good team standards on how often forks are merged back into the main repository.\n\nBranching\n\nUse sparingly!\nCreate a branch for a specific task, complete task, merge to main immediately. \n\nUse when you are making a change that could “break” the main repo for some reason\nBranches are easy to “get lost in” and can create confusion and complicate organization of your repo\n\n\nProjects can be created within our CB-genetics team. Use them to organize tasks or discussions associated with one or multiple repositories.",
    "crumbs": [
      "Github Resources"
    ]
  },
  {
    "objectID": "content/02_github-resources.html#cb-genetics-github-repository-guidelines",
    "href": "content/02_github-resources.html#cb-genetics-github-repository-guidelines",
    "title": "Github Resources",
    "section": "CB Genetics Github Repository Guidelines",
    "text": "CB Genetics Github Repository Guidelines\nSee How to: Create a github repository in enterprise for a full tutorial walk through of creating a github repository.\nFrom the NMFS Github Guide, your repository should include a README, the government product DISCLAIMER, and LICENSE file. In addition, all CB Genetics github repositories should include the following components:\n\nREADME\nThe README file should provide a detailed description of the repository. The contents of the README will vary depending on the project type and degree of completeness, but should include a few common elements.\nRecommended README components:\n\nPrimary contacts: Include name and email of at least one primary contact\nCitation/Reference/DOI: If the work is something that can be cited, then also include citation information and a DOI. This will be more common in repositories containing finished projects.\nObjective: Briefly describe the objective of the project/analysis to provide context for your repository.\nMethods: Include relevant information regarding the methods used in the analysis for this project repository. This can be broken up in sections if needed for a larger repository that houses multiple analyses.\nMajor Results: For projects in mostly finished states, add major takeaways from your analysis. Including figures is optional.\nDisclaimer: Repositories and web content shared on GitHub should make it clear to the audience that no information should be considered or interpreted as official communication of NOAA. The simplest method for doing this is to include the disclaimer text as a footnote within the repository’s README.md.\n\n\n\n\n\n\n\nDISCLAIMER\n\n\n\nThis repository is a scientific product and is not official communication of the National Oceanic and Atmospheric Administration, or the United States Department of Commerce. All NOAA GitHub project code is provided on an ‘as is’ basis and the user assumes responsibility for its use. Any claims against the Department of Commerce or Department of Commerce bureaus stemming from the use of this GitHub project will be governed by all applicable Federal law. Any reference to specific commercial products, processes, or services by service mark, trademark, manufacturer, or otherwise, does not constitute or imply their endorsement, recommendation or favoring by the Department of Commerce. The Department of Commerce seal and logo, or the seal and logo of a DOC bureau, shall not be used in any manner to imply endorsement of any commercial product or activity by DOC or the United States Government.\n\n\n\n\nLICENSE File\nYou should add an open license file to the GitHub repository before work begins. This establishes from the moment work starts that all work is open source (as required for publicly released federally funded work).\nTo add a license to your repository, navigate to the base level of your repository (so not in a subdirectory) and add a file called LICENSE. Under the file name, click Choose a license template, select Apache-2.0 license.\n\n\nAssign CB-Genetics Team\nAssigning the CB-Genetics team to your repository keeps our group’s work organized and easy to find within the NWFSC enterprise organization. Simply navigate to the NWFSC enterprise organization, click on the Teams tab, expand the CB team to find the CB-Genetics team within it, then click on Repositories.\n\n\n\nRepositories in the CB-Genetics Team\n\n\nTo do this: Settings -&gt;Manage access -&gt; Add teams -&gt; CB-Genetics (You choose permissions when establishing this access.)\nFor a guided tutorial, see How to: Create a github repository in enterprise\n\n\nAdd the nwfsc-cb-genetics Topic to Your Repository\nTopics are used in Github like hashtags are used in social media. It is another way to categorize repositories and organize them. For example, the NWFSC Github Organization landing page has a link to all repositories with the nwfsc-cb-genetics topic.\nThe “nwfsc-cb-genetics” topic should be added to all repositories in our group.\n\nTo do this: navigate to the main page of the repository -&gt; in the top right corner, to the right of “About”, clikc the gear symbol -&gt; under “Topics” start to type nwfsc-cb-genetics, click the matching topic from the dropdown menu -&gt; click “Save changes”\nFor a guided tutorial, see How to: Create a github repository in enterprise\n\n\nGitignore\nMore guidance forthcoming!",
    "crumbs": [
      "Github Resources"
    ]
  },
  {
    "objectID": "content/02_github-resources.html#noaa-github-repository-guidelines",
    "href": "content/02_github-resources.html#noaa-github-repository-guidelines",
    "title": "Github Resources",
    "section": "NOAA Github Repository Guidelines",
    "text": "NOAA Github Repository Guidelines\nFrom the NMFS Github Guide, all repositories, regardless of purpose, must follow these general guidelines:\n\nPII and BII should never be shared (on purpose or inadvertently) on GitHub regardless of whether the repository is in a private or public repository.\nNo sensitive information should be shared in repositories, including (but is not limited to) usernames, passwords, login information, port numbers, IP addresses, server names, Application Programming Interface (API) keys, Personally Identifiable Information (PII), Business Identifiable Information (BII), or confidential data.\nGitHub is not a back-up service nor is it a data repository with archiving. Other tools are designed for this purpose.\nOnly scientific content that can be reasonably classified as FISMA Low should be shared on GitHub.\nRepositories that have code that interacts with APIs using IP addresses, usernames, passwords, secrets, or credentials must take steps to prevent committing of “secrets” to GitHub.",
    "crumbs": [
      "Github Resources"
    ]
  },
  {
    "objectID": "content/03_open-science.html",
    "href": "content/03_open-science.html",
    "title": "Open Science",
    "section": "",
    "text": "Open science is a movement that aims to make scientific research, data, and publications available to everyone. It encourages collaboration, transparency, and productivity.\nNOAA Fisheries has an Open Science Initiative with the intent to support scientists, developers, resource managers, and policy analysts in the adoption of modern, open, reproducible scientific workflows that enhance our already groundbreaking scientific work.This vision importantly also enables more timely fulfillment of NOAA’s Open Science mandates:\nNOAA Data Strategy, NOAA Fisheries Data Vision, DOC Open Source Code Policy, Federal Data Strategy, Federal Open Access Memo, Open Government National Action Plan\nInformation pulled from Open Science at NOAA Fisheries",
    "crumbs": [
      "Open Science"
    ]
  },
  {
    "objectID": "content/03_open-science.html#what-is-open-science",
    "href": "content/03_open-science.html#what-is-open-science",
    "title": "Open Science",
    "section": "",
    "text": "Open science is a movement that aims to make scientific research, data, and publications available to everyone. It encourages collaboration, transparency, and productivity.\nNOAA Fisheries has an Open Science Initiative with the intent to support scientists, developers, resource managers, and policy analysts in the adoption of modern, open, reproducible scientific workflows that enhance our already groundbreaking scientific work.This vision importantly also enables more timely fulfillment of NOAA’s Open Science mandates:\nNOAA Data Strategy, NOAA Fisheries Data Vision, DOC Open Source Code Policy, Federal Data Strategy, Federal Open Access Memo, Open Government National Action Plan\nInformation pulled from Open Science at NOAA Fisheries",
    "crumbs": [
      "Open Science"
    ]
  },
  {
    "objectID": "content/03_open-science.html#nmfs-open-science-resources",
    "href": "content/03_open-science.html#nmfs-open-science-resources",
    "title": "Open Science",
    "section": "NMFS Open Science Resources",
    "text": "NMFS Open Science Resources\nNMFS Open Science public home page\nNMFS Open Science internal home page - Links to NMFS Open Science calendar of events\nNMFS Open Science Resource Book\nNMFS Openscapes is a collaboration between NOAA Fisheries and Openscapes to promote a data-driven culture through the adoption of open science tools and strategies. Openscapes provides team-based training in reproducible scientific workflows, data management, coding, and optimal team collaboration and project management. Keep an eye out for upcoming openscapes champions cohort opportunities on their webpage.",
    "crumbs": [
      "Open Science"
    ]
  },
  {
    "objectID": "content/01_project-repos.html",
    "href": "content/01_project-repos.html",
    "title": "CB Genetics Github Repositories",
    "section": "",
    "text": "To add your repository to this table, edit the table in the 01_project-repos.qmd file of the content folder of the github repo for this landing page. This is a quarto markdown file that creates this specific page and can be edited with basic markdown syntax (see General Github Resources and Glossary page if you need assistance). Repos are currently organized by species! Remember you must push your commit to origin if working from desktop. The rendering and publishing (updating the webpage) will take a few minutes to complete.\n\n\n\nProject\nDescription\nData Input(s)\nContact Authors\n\n\n\n\nVermilion Sunset Rockfish\nThe primary objective was to conduct a genomic analysis to distinguish the vermilion rockfish stock along the west coast from sunset rockfish using tissue samples previously collected during fishery-independent resource surveys. Specifically, we (1) used high-throughput sequencing technologies to identify single nucleotide polymorphisms (SNPs) which produced an assay that definitively separates the two species, (2) applied this SNP panel to over 27 thousand samples and finally (3) identified species-specific demographic and biological differences.\nGT-seq\nAnita Wray (anita.wray@noaa.gov)\n\n\nRockfish Metabarcoding\n\nMetabarcoding\nMeredith Everett (meredith.everett@noaa.gov)\n\n\nVermilion Sunset Epigenetic Project\nWe leveraged findings from our ongoing research to improve estimates of age for both vermilion and sunset rockfish. Specifically, we will use epigenetic analyses of fin clips to estimate the age of individuals in both species using a subset of our existing 30,000 vermilion and sunset rockfish samples collected from 2004-2023 during two industry-collaborative research surveys. Epigenetic ageing provides a non-lethal method of determining age and lifespan using the degree of methylation at genomic sites. These sites are preselected from previous studies.\nBisulfite sequencing\nAnita Wray (anita.wray@noaa.gov), Marty Kardos (martin.kardos@noaa.gov)\n\n\nEulachon RADseq\nMulti-year Eulachon RAD-seq analysis (2009-2020) for the following populations: Elwha, Cowlitz, Lyre, Fraser, Skeena, Nass, Kemano, Grays, Sandy, Klamath\nRADseq\nMia Nahom (mia.nahom@noaa.gov)\n\n\nLower Elwha Klallam Tribe Eulachon Species ID\nSpecies identification of tissue, larvae, and eggs collected by the Lower Elwha Klallam Tribe (LEKT) to understand eulachon distribution using a metabarcoding approach.\nMetabarcoding\nSam Engster (samantha.engster@noaa.gov)\n\n\nNWFSC Eulachon GSI Project\n\n\nMaddie Betts (madison.betts@noaa.gov) Krista Nichols (krista.nichols@noaa.gov) Mia Nahom (mia.nahom@noaa.gov)\n\n\nWenatchee-RRS\nMonitoring the reproductive success of naturally spawning hatchery and natural spring Chinook salmon in the Wenatchee River. Specifically, what is the relative reproductive success (RRS) of naturally spawning hatchery fish and what are the causes of poor reproductive success of hatchery fish?\n\nMike Ford (mike.ford@noaa.gov)\n\n\nChinook IRA Puget Sound Genomics\n\n\nJoanna Griffiths (joanna.griffiths@noaa.gov)\n\n\nChinook bycatch genotyping\nThe objective of this repo is to provide core code for chinook bycatch genotyping using GTscore, as well as individual genotyping runs for data produced on the project.\nGTseq\nKrista Nichols (krista.nichols@noaa.gov)\n\n\nqPCR_CPS\nThe primary objective of this study is to use statistical geospatial modeling to analyze 2023 biomass estimates of CPS—specifically sardines and anchovies—along the U.S. West Coast, derived from eDNA and trawl survey data. This analysis employs statistical methods to interpolate discrete sample points, generating smooth, continuous biomass maps from discrete observation. This approach aims to clarify spatial distribution patterns, assess the influence of environmental covariates, and evaluate the efficacy of eDNA sampling compared to traditional acoustic-trawl surveys, ultimately informing fisheries stock assessments.\neDNA qPCR detections, trawl survey data\nMichelle Hauer (michelle.hauer@noaa.gov)\n\n\nSRKW-Genetics\n\nPrey Scales and Bits\n\nSpecies identification\nGenetic stock identification\n\nFecal and Mucus\n\nIndividual whale identification\nPedigree analysis\nPrey metabarcoding\n\n\n\nKim Parsons (kim.parsons@noaa.gov), Emma Horton (emma.horton@noaa.gov)",
    "crumbs": [
      "Project Repositories"
    ]
  },
  {
    "objectID": "content/01_project-repos.html#project-repositories",
    "href": "content/01_project-repos.html#project-repositories",
    "title": "CB Genetics Github Repositories",
    "section": "",
    "text": "To add your repository to this table, edit the table in the 01_project-repos.qmd file of the content folder of the github repo for this landing page. This is a quarto markdown file that creates this specific page and can be edited with basic markdown syntax (see General Github Resources and Glossary page if you need assistance). Repos are currently organized by species! Remember you must push your commit to origin if working from desktop. The rendering and publishing (updating the webpage) will take a few minutes to complete.\n\n\n\nProject\nDescription\nData Input(s)\nContact Authors\n\n\n\n\nVermilion Sunset Rockfish\nThe primary objective was to conduct a genomic analysis to distinguish the vermilion rockfish stock along the west coast from sunset rockfish using tissue samples previously collected during fishery-independent resource surveys. Specifically, we (1) used high-throughput sequencing technologies to identify single nucleotide polymorphisms (SNPs) which produced an assay that definitively separates the two species, (2) applied this SNP panel to over 27 thousand samples and finally (3) identified species-specific demographic and biological differences.\nGT-seq\nAnita Wray (anita.wray@noaa.gov)\n\n\nRockfish Metabarcoding\n\nMetabarcoding\nMeredith Everett (meredith.everett@noaa.gov)\n\n\nVermilion Sunset Epigenetic Project\nWe leveraged findings from our ongoing research to improve estimates of age for both vermilion and sunset rockfish. Specifically, we will use epigenetic analyses of fin clips to estimate the age of individuals in both species using a subset of our existing 30,000 vermilion and sunset rockfish samples collected from 2004-2023 during two industry-collaborative research surveys. Epigenetic ageing provides a non-lethal method of determining age and lifespan using the degree of methylation at genomic sites. These sites are preselected from previous studies.\nBisulfite sequencing\nAnita Wray (anita.wray@noaa.gov), Marty Kardos (martin.kardos@noaa.gov)\n\n\nEulachon RADseq\nMulti-year Eulachon RAD-seq analysis (2009-2020) for the following populations: Elwha, Cowlitz, Lyre, Fraser, Skeena, Nass, Kemano, Grays, Sandy, Klamath\nRADseq\nMia Nahom (mia.nahom@noaa.gov)\n\n\nLower Elwha Klallam Tribe Eulachon Species ID\nSpecies identification of tissue, larvae, and eggs collected by the Lower Elwha Klallam Tribe (LEKT) to understand eulachon distribution using a metabarcoding approach.\nMetabarcoding\nSam Engster (samantha.engster@noaa.gov)\n\n\nNWFSC Eulachon GSI Project\n\n\nMaddie Betts (madison.betts@noaa.gov) Krista Nichols (krista.nichols@noaa.gov) Mia Nahom (mia.nahom@noaa.gov)\n\n\nWenatchee-RRS\nMonitoring the reproductive success of naturally spawning hatchery and natural spring Chinook salmon in the Wenatchee River. Specifically, what is the relative reproductive success (RRS) of naturally spawning hatchery fish and what are the causes of poor reproductive success of hatchery fish?\n\nMike Ford (mike.ford@noaa.gov)\n\n\nChinook IRA Puget Sound Genomics\n\n\nJoanna Griffiths (joanna.griffiths@noaa.gov)\n\n\nChinook bycatch genotyping\nThe objective of this repo is to provide core code for chinook bycatch genotyping using GTscore, as well as individual genotyping runs for data produced on the project.\nGTseq\nKrista Nichols (krista.nichols@noaa.gov)\n\n\nqPCR_CPS\nThe primary objective of this study is to use statistical geospatial modeling to analyze 2023 biomass estimates of CPS—specifically sardines and anchovies—along the U.S. West Coast, derived from eDNA and trawl survey data. This analysis employs statistical methods to interpolate discrete sample points, generating smooth, continuous biomass maps from discrete observation. This approach aims to clarify spatial distribution patterns, assess the influence of environmental covariates, and evaluate the efficacy of eDNA sampling compared to traditional acoustic-trawl surveys, ultimately informing fisheries stock assessments.\neDNA qPCR detections, trawl survey data\nMichelle Hauer (michelle.hauer@noaa.gov)\n\n\nSRKW-Genetics\n\nPrey Scales and Bits\n\nSpecies identification\nGenetic stock identification\n\nFecal and Mucus\n\nIndividual whale identification\nPedigree analysis\nPrey metabarcoding\n\n\n\nKim Parsons (kim.parsons@noaa.gov), Emma Horton (emma.horton@noaa.gov)",
    "crumbs": [
      "Project Repositories"
    ]
  },
  {
    "objectID": "content/01_project-repos.html#resource-repositories",
    "href": "content/01_project-repos.html#resource-repositories",
    "title": "CB Genetics Github Repositories",
    "section": "Resource Repositories",
    "text": "Resource Repositories\n\n\n\nRepository\nDescription\nReference/Contact\n\n\n\n\nGT-Score\nPipeline for GTseq genotyping and quality control\nGarrett McKinney\n\n\nMarineOmics\nA growing and evolving collection of guidelines, tutorials, recommended readings, and method evaluations for various ’omics analyses that are commonly used in studies of nonmodel systems (particularly marine species). Analysis examples include: WGS, low coverage WGS, reduced representation sequencing, Poolseq, RDA, PCA, ancient & degraded DNA, RNAseq, DNA methylation assessment.\nBogan, S. N., Johns, J., Griffiths, J. S., Davenport, D., Smith, S. J., Schaal, S. M., Downey-Wall, A., Lou, R. N., Lotterhos, K., Guidry, M. E., Rivera, H. E., McGirr, J. A., Puritz, J. B., Roberts, S. B., and Silliman, K. (2023). A dynamic web resource for robust and reproducible genomics in nonmodel species: marineomics.io. Methods in Ecology and Evolution, 00, 1–8. https://doi.org/10.1111/2041-210X.14219",
    "crumbs": [
      "Project Repositories"
    ]
  }
]